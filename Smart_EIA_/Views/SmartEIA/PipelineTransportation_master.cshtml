@{
    ViewBag.Title = "PTT Smart EIA Regulatory";
    Layout = "~/Views/Shared/Content_Layout.cshtml";
}
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false&libraries=drawing"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDd33TLAVehao--qEJ9u7j7ZNSjN1315C0&libraries=drawing&callback=initMap"
            async defer></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>


    <style>

        .map {
            background-color: #fff;
            width: 100%;
            padding: 5px;
            height: 700px;
            float: left;
        }

        #map {
            width: 100%;
            height: 100%;
        }

        #Resulte, .GasSystem, .status, .pressure, .size, .area, .riverarea {
            display: none;
        }

        #color-palette {
            clear: both;
        }

        .color-button {
            width: 14px;
            height: 14px;
            font-size: 0;
            margin: 2px;
            float: left;
            cursor: pointer;
        }

        #delete-button {
            margin-top: 5px;
        }
    </style>

</head>
<body onload="initMap()">
    <div class="xxx" style="padding: 5px 0px 5px 5px; display: flex; flex-wrap:wrap;">
        <div class="header-banner">
            <div class="btx">
                <div class="img-ss">
                    <img src="@Url.Content("~/Content/template/")img/link-2.svg" alt="" width="90px" height="90px">
                </div>
                <p>
                    2. โครงการระบบขนส่งปิโตรเลียมและน้ำมันเชื้อเพลิงทางท่อ
                </p>
            </div>
        </div>
    </div>

    <div class="contain-index" style="padding: 15px 0px; background-color: #e7eef1; overflow-x: hidden;">
        <div class="row" style=" margin-right: 0px;margin-left: 0px;">
            <div class="col-lg-12 nopadding">
                <span class="ss-btn" onclick="ss_l_menu()"><i class="fas fa-chevron-right"></i></span>
                <div class="l-menu bg-gg nopadding">
                    <div class="data-col">
                        <p class="ddda">
                            1.ระบุที่ตั้งโครงการ
                        </p>
                        <div class="pp-list">
                            <div class="list-p" onclick="sliderr(1)">
                                <p class="hh">
                                    พิกัดที่ตั้ง
                                </p>
                            </div>
                            <div class="dt-slide" id="ss-1">
                                <div class="sl-input" id="sd-1">
                                    <h5> ระบุพิกัด UTM WGS 84 </h5>
                                    <p>Zone:  <select><option>47</option> <option>48</option></select></p>
                                    <hr />
                                    <p>East: <!--lat--> <input id="lat" type="text" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" /></p>
                                    <p>North:<!--lng--> <input id="lng" type="text" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" /></p>
                                    <button class="ee-bb" onclick="">OK</button>
                                </div>
                            </div>
                            <div class="list-p" onclick="sliderr(2)">
                                <p class="hh">
                                    กำหนดเอง
                                </p>
                            </div>
                            <div class="dt-slide" id="ss-2">
                                <div class="sl-input" id="sd-2">
                                    <button onclick="">Add placemark</button>
                                    <button onclick="call()">Draw line or shape</button>

                                    <select id="testdraw" class="txa-50" size="5" onchange="test()">
                                            <option value="1">พื้นทีี่ A </option>
                                            <option value="2">พื้นที่ B</option>
                                            <option value="3">พื้นทีี่ C</option>
                                            <option value="4">พื้นที่ D</option>
                                    </select>
                                </div>
                            </div>

                            <div class="list-p" onclick="sliderr(3)">
                                <p class="hh">
                                    ตำแหน่งจากข้อมูล kmz ไฟล์
                                </p>
                            </div>
                            @* add file  *@
                            <div class="dt-slide" id="ss-3">
                                <div class="sl-input" id="sd-3">
                                    <button id="buttonfile" onclick="thisFileUpload()">Import Kmz</button>
                                    <button onclick="removeAll()">Clear</button>
                                    <input type="file" id="files" name="files[]" multiple hidden />
                                    <select class="txa-50" size="5" id="list">
                                        <option onclick="pipe()">ท่อ5.kmz</option>
                                        <!-- <option onclick="pipe1()">2017-5FTP.kmz</option>-->

                                    </select>
                                </div>
                            </div>
                            <div class="list-p" onclick="sliderr(4)">
                                <p class="hh">
                                    ไม่ระบุที่ตั้งโครงการ
                                </p>
                            </div>
                            
                        </div>
                    </div>
                </div>
                <div class="row no_mr">
                    <div class="col-md-8">
                        <div class="map">
                            <div id="map"></div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="nopadding ">
                            <div class="data-col">
                                <div class="specify">
                                    <p class="ddda" style="margin-top: 10px;">
                                        2.ระบุรายละเอียดโครงการ
                                    </p>
                                    <div class="type">
                                        <p>
                                            ประเภทปิโตรเลียม  <i class="fa fa-info-circle" data-toggle="tooltip" title="ตามกฎหมายว่าด้วยปิโตรเลียม"></i>
                                            <select id="selecttypes" class="form-control">
                                                <option value="none" selected>--เลือกประเภทปิโตรเลียม--</option>
                                                <option value="ng">ก๊าซธรรมชาติ (Natural Gas)</option>
                                                <option value="ngl"> ก๊าซปิโตรเลียมเหลว (Liquefied Petroleum Gas) </option>
                                                <option value="lpg">ก๊าซโซลีนธรรมชาติ (Natural Gasoline)  </option>
                                                <option value="oil">น้ำมันเชื้อเพลิง (Fuel Oil)</option>
                                                <option value="hydrocarbon">ปิโตรเลียมอื่น ๆ (Other Petroleum) </option>
                                            </select>
                                        </p>
                                    </div>

                                    <div class="GasSystem">
                                        <p>
                                            พื้นที่วางท่อ
                                            <select id="selectGasSystem" class="form-control">
                                                <option value="none" selected>--เลือกพื้นที่วางท่อ-</option>
                                                <option value="ground">บนบก</option>
                                                <option value="water">ในทะเล</option>
                                            </select>
                                        </p>
                                    </div>

                                    <div class="status">
                                        <p>
                                            สถานะ
                                            <select id="selectstatus" class="form-control">
                                                <option value="none" selected>--เลือกสถานะ--</option>
                                                <option value="gas">ก๊าซ (Gas) เช่น CNG NG </option>
                                                <option value="liquid">ของเหลว (Liquid) เช่น LNG</option>
                                            </select>
                                        </p>
                                    </div>

                                    <div class="pressure">
                                        <p>
                                            ความดันใช้งานสูงสุด (Maximum Operating Pressure; MOP)   <i class="fa fa-info-circle" data-toggle="tooltip" title="20 barg = 290 psig (1 barg = 14.5 psig)"></i>

                                            <select id="selectpressure" class="form-control">
                                                <option value="none" selected>--เลือกความดัน--</option>
                                                <option value="1">น้อยกว่า 20 บาร์ (barg) หรือ เท่ากับ 20 บาร์ (barg)</option>
                                                <option value="2">มากกว่า 20 บาร์ (barg)</option>
                                            </select>
                                        </p>

                                    </div>

                                    <div class="size">
                                        <p>
                                            ขนาดเส้นผ่านศูนย์กลางของท่อ   <i class="fa fa-info-circle" data-toggle="tooltip" title="Nominal Pipe Size "></i>
                                            <select id="selectsize" class="form-control">
                                                <option value="" selected>--เลือกขนาดท่อ--</option>
                                                <option value="1">น้อยกว่า 16 นิ้ว หรือ เท่ากับ 16 นิ้ว</option>
                                                <option value="2">มากกว่า 16 นิ้ว</option>
                                            </select>
                                        </p>
                                    </div>

                                    <div id="okbtn" class="pc-btn">
                                        <hr />
                                        <button class="ee-bb" id="Btnok">ตกลง</button>
                                    </div>

                                    <div class="area">
                                        <p>
                                            แนวท่อทั้งหมดอยู่ในเขตนิคมอุตสาหกรรม  <label style="float:right;"><input type="checkbox" id="s1" onClick="Select1()" />  กำหนดเอง</label>
                                            <select id="selectarea" class="form-control" disabled>
                                                <option value="in" selected>อยู่</option>
                                                <option value="out">ไม่อยู่</option>
                                                <option value="out">อยู่บางส่วน</option>
                                            </select>
                                            <br />
                                            <div class="pc-btn"><button id="Btnarea" class="ee-bb"> ตกลง </button></div>
                                        </p>
                                    </div>

                                    <div class="riverarea">
                                        <p>
                                            อยู่ในพื้นที่ชั้นคุณภาพลุ่มน้ำ ชั้น 1  <label style="float:right;"><input type="checkbox" id="s2" onClick="Select2()" />  กำหนดเอง</label>

                                            <select id="selectriverarea" class="form-control" disabled>
                                                <option value="y" selected>อยู่</option>
                                                <option value="n">ไม่อยู่</option>
                                            </select>
                                        </p>
                                        <br />
                                        <div class="pc-btn">  <button id="Btnriverarea" class="ee-bb"> ตกลง </button></div>
                                    </div>

                                </div>
                                <div id="Resulte">
                                    <h4 style="width:100%; text-align:left;"><u>สรุปผล</u></h4>
                                    <p>โครงการ กิจการ หรือการดำเนินการ <u style="color:red;">เข้าข่าย</u> ต้องจัดทำรายงานด้านสิ่งแวดล้อม</p>
                                    <hr />
                                    <h5>ประเภท</h5>
                                    <p id="labeltype">
                                        EHIA
                                    </p>
                                    <hr />
                                    <h5>เสนอต่อ</h5>
                                    <p style="width:100%;">
                                        <img id="imLogo" src="" width="50px" height="50px" style="background-color:white;" />
                                        <label style="width:80%;" id="labeloffer">สผ.</label>
                                    </p>
                                    <hr />
                                    <h5>ตามกฎหมาย</h5>
                                    <p id="labellaw">เรื่อง...</p>
                                    <hr />
                                    <div class="pc-btn">  <button class="ee-bb" onclick="hideresulte()">&uarr; ย้อนกลับ</button></div><br />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="footer-banner">
        <div class="ffff">
        </div>
    </div>
</body>

<script>
    function del() {
        bermudaTriangle.setMap(null);
    }
    function test() {
        $("#testdraw").change(function () {
            var test = $("#testdraw").find(":selected").val();
            if (test == "1") {
                /*in y */
                var triangleCoords = [
                    { lat: 13.134223768510942, lng: 101.16901142676424 },
                    { lat: 13.128790657872644, lng: 101.16789562781405 },
                    { lat: 13.129501148402044, lng: 101.16115791876864 },
                    { lat: 13.134808865564281, lng: 101.16253120978426 }
                ];

                // Construct the polygon.
                var bermudaTriangle = new google.maps.Polygon({
                    paths: triangleCoords,
                    strokeColor: '#4B0082',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#FF0000',
                    fillOpacity: 0.35
                });

                map.panTo({ lat: 13.134223768510942, lng: 101.16901142676424 });
                map.setZoom(15);
                bermudaTriangle.setMap(map);
                // bermudaTriangle.setMap(map);
                // Set option selected onchange
                var test = $("#testdraw").find(":selected").val();
                value = "in";
                // Set selected
                $('#selectarea').val(value);
                $('#selectarea').val('in').trigger('change');
                $('#selectriverarea').val(value);
                $('#selectriverarea').val('y').trigger('change');
            }
            else if (test == "2") {
                /*out n*/
                var triangleCoords = [
                    { lat: 13.144456493669955, lng: 101.14824183191638 },
                    { lat: 13.144874402855818, lng: 101.15257628168445 },
                    { lat: 13.139483319727729, lng: 101.15270502771716 },
                    { lat: 13.13931615246638, lng: 101.14841349329333 }
                ];

                // Construct the polygon.
                var bermudaTriangle = new google.maps.Polygon({
                    paths: triangleCoords,
                    strokeColor: '#4B0082',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#FF0000',
                    fillOpacity: 0.35
                });

                map.panTo({ lat: 13.134223768510942, lng: 101.16901142676424 });
                map.setZoom(15);
                bermudaTriangle.setMap(map);
                // bermudaTriangle.setMap(map);
                // Set option selected onchange
                var test = $("#testdraw").find(":selected").val();
                value = "in";
                // Set selected
                $('#selectarea').val(value);
                $('#selectarea').val('out').trigger('change');
                $('#selectriverarea').val(value);
                $('#selectriverarea').val('n').trigger('change');
            }
            else if (test == "3") {
                /*in n*/

                /* */
                var triangleCoords = [
                    { lat: 13.120348201394401, lng: 101.15845425208163 },
                    { lat: 13.123909790559647, lng: 101.16442680358887 },
                    { lat: 13.124778437495687, lng: 101.1527035959537 },
                    { lat: 13.121393075595345, lng: 101.15150196631502 }
                ];

                // Construct the polygon.
                var bermudaTriangle = new google.maps.Polygon({
                    paths: triangleCoords,
                    strokeColor: '#4B0082',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#4B0082',
                    fillOpacity: 0.35
                });

                map.panTo({ lat: 13.123909790559647, lng: 101.16442680358887 });
                map.setZoom(15);
                bermudaTriangle.setMap(map);
                // bermudaTriangle.setMap(map);
                // Set option selected onchange
                var test = $("#testdraw").find(":selected").val();
                value = "in";
                // Set selected
                $('#selectarea').val(value);
                $('#selectarea').val('in').trigger('change');
                $('#selectriverarea').val(value);
                $('#selectriverarea').val('n').trigger('change');

            }
            else {
                /*in y */
                // bermudaTriangle.setMap(null);
                var triangleCoords = [
                    { lat: 13.129250387273366, lng: 101.1504719980533 },
                    { lat: 13.133095363113823, lng: 101.15141613562655 },
                    { lat: 13.13342970599428, lng: 101.14467842658114 },
                    { lat: 13.129793702728612, lng: 101.14347679694247 }
                ];
                // Construct the polygon.
                var bermudaTriangle = new google.maps.Polygon({
                    paths: triangleCoords,
                    strokeColor: '#FF0000',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#FF0000',
                    fillOpacity: 0.35
                });
                map.panTo({ lat: 13.129250387273366, lng: 101.1504719980533 });
                map.setZoom(15);

                bermudaTriangle.setMap(map);

                var test = $("#testdraw").find(":selected").val();
                value = "out";
                // Set selected
                $('#selectarea').val(value);
                $('#selectarea').val('out').trigger('change');
                $('#selectriverarea').val(value);
                $('#selectriverarea').val('y').trigger('change');


            }
        });
    }
    function handleFileSelect(evt) {
        var files = evt.target.files; // FileList object

        // files is a FileList of File objects. List some properties.
        var output = [];
        for (var i = 0, f; f = files[i]; i++) {
            output.push('<option>', f.name, '</option>');
        }
        document.getElementById('list').innerHTML = output.join('');
    }
    document.getElementById('files').addEventListener('change', handleFileSelect, false);
    /*map*/
    var map;
    var drawingManager;
    var selectedShape;
    var colors = ['#1E90FF', '#FF1493', '#32CD32', '#FF8C00', '#4B0082'];
    var selectedColor;
    var colorButtons = {};
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 13.847860, lng: 100.604274 },
            mapTypeControl: true,
            mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                position: google.maps.ControlPosition.LEFT_TOP
            },
            zoomControl: true,
            zoomControlOptions: {
                position: google.maps.ControlPosition.RIGHT_BOTTOM
            },
            scaleControl: true,
            streetViewControl: true,
            streetViewControlOptions: {
                position: google.maps.ControlPosition.RIGHT_BOTTOM
            },
            fullscreenControl: true,
            fullscreenControlOptions: {
                position: google.maps.ControlPosition.RIGHT_BOTTOM
            },
            zoom: 10
        });

        var polyOptions = {
            strokeWeight: 0,
            fillOpacity: 0.45,
            editable: true,
            draggable: true
        };

        // Creates a drawing manager attached to the map that allows the user to draw
        // markers, lines, and shapes.
        drawingManager = new google.maps.drawing.DrawingManager({
            drawingMode: google.maps.drawing.OverlayType.POLYGON,
            markerOptions: {
                draggable: true
            },
            polylineOptions: {
                editable: true,
                draggable: true
            },
            rectangleOptions: polyOptions,
            circleOptions: polyOptions,
            polygonOptions: polyOptions,
            map: map
        });

        google.maps.event.addListener(drawingManager, 'overlaycomplete', function (e) {

            var newShape = e.overlay;
            newShape.type = e.type;
            var parths = [];
            parths.push();

            if (e.type !== google.maps.drawing.OverlayType.MARKER) {
                // Switch back to non-drawing mode after drawing a shape.
                drawingManager.setDrawingMode(null);

                // Add an event listener that selects the newly-drawn shape when the user
                // mouses down on it.

                google.maps.event.addListener(newShape, 'click', function (e) {
                    if (e.vertex !== undefined) {
                        if (newShape.type === google.maps.drawing.OverlayType.POLYGON) {
                            var path = newShape.getPaths().getAt(e.path);
                            path.removeAt(e.vertex);
                            if (path.length < 3) {
                                newShape.setMap(null);
                            }
                        }
                        if (newShape.type === google.maps.drawing.OverlayType.POLYLINE) {
                            var path = newShape.getPath();
                            path.removeAt(e.vertex);
                            if (path.length < 2) {
                                newShape.setMap(null);
                            }
                        }
                    }
                    setSelection(newShape);
                });
                setSelection(newShape);
            }
            else {
                google.maps.event.addListener(newShape, 'click', function (e) {
                    setSelection(newShape);
                });
                setSelection(newShape);
            }
        });
        // map.data.loadGeoJson('https://raw.githubusercontent.com/Naphatsanan1280/Kmlfile/master/Indrustry.geojson');

        // Clear the current selection when the drawing mode is changed, or when the
        // map is clicked.
        google.maps.event.addListener(drawingManager, 'drawingmode_changed', clearSelection);
        google.maps.event.addListener(map, 'click', clearSelection);
        google.maps.event.addDomListener(document.getElementById('delete-button'), 'click', deleteSelectedShape);

        buildColorPalette();


        var ctaLayer = new google.maps.KmlLayer({
            url: 'https://github.com/Naphatsanan1280/Kmlfile/blob/master/Industrial_Estate_Boundary.kmz?raw=true'
        });
        ctaLayer.setMap(map);
       

        

        var latlngcl = [];
        google.maps.event.addListener(ctaLayer, 'click', function (evt) {
            console.log(evt.latLng.lat() + "  " + evt.latLng.lng());

        });
        google.maps.event.addListener(map, 'click', function (event) {
            console.log(event.latLng);   // Get latlong info as object.
            console.log("Latitude: " + event.latLng.lat() + " " + ", longitude: " + event.latLng.lng()); // Get separate lat long.
        });

        google.maps.event.addListener(drawingManager, 'click', function (event) {

            console.log("Latitude: " + event.latLng.lat() + " " + ", longitude: " + event.latLng.lng()); // Get separate lat long.

        });

    }

    google.maps.event.addDomListener(window, 'load', initMap);
    function pipe1() {
        //<option>ท่อ5.kmz</option>

          var Layer = new google.maps.KmlLayer({
            url: 'https://github.com/Naphatsanan1280/Kmlfile/blob/master/2017-5FTP.kmz?raw=true'
        });
        Layer.setMap(map);
      
    }


     function pipe() {
        //<option>ท่อ5.kmz</option>
        var ctaLayer = new google.maps.KmlLayer({
            url: 'https://github.com/Naphatsanan1280/Kmlfile/blob/master/%E0%B8%97%E0%B9%88%E0%B8%AD%205.kmz?raw=true'
        });
        ctaLayer.setMap(map);
    }
    function clearSelection() {
        if (selectedShape) {
            if (selectedShape.type !== 'marker') {
                selectedShape.setEditable(false);
            }

            selectedShape = null;
        }
    }

    function setSelection(shape) {
        if (shape.type !== 'marker') {
            clearSelection();
            shape.setEditable(true);
            selectColor(shape.get('fillColor') || shape.get('strokeColor'));
        }

        selectedShape = shape;
    }

    function deleteSelectedShape() {
        if (selectedShape) {
            selectedShape.setMap(null);
        }
    }

    function selectColor(color) {
        selectedColor = color;
        for (var i = 0; i < colors.length; ++i) {
            var currColor = colors[i];
            colorButtons[currColor].style.border = currColor == color ? '2px solid #789' : '2px solid #fff';
        }

        // Retrieves the current options from the drawing manager and replaces the
        // stroke or fill color as appropriate.
        var polylineOptions = drawingManager.get('polylineOptions');
        polylineOptions.strokeColor = color;
        drawingManager.set('polylineOptions', polylineOptions);

        var rectangleOptions = drawingManager.get('rectangleOptions');
        rectangleOptions.fillColor = color;
        drawingManager.set('rectangleOptions', rectangleOptions);

        var circleOptions = drawingManager.get('circleOptions');
        circleOptions.fillColor = color;
        drawingManager.set('circleOptions', circleOptions);

        var polygonOptions = drawingManager.get('polygonOptions');
        polygonOptions.fillColor = color;
        drawingManager.set('polygonOptions', polygonOptions);
    }

    function setSelectedShapeColor(color) {
        if (selectedShape) {
            if (selectedShape.type == google.maps.drawing.OverlayType.POLYLINE) {
                selectedShape.set('strokeColor', color);
            } else {
                selectedShape.set('fillColor', color);
            }
        }
    }

    function makeColorButton(color) {
        var button = document.createElement('span');
        button.className = 'color-button';
        button.style.backgroundColor = color;
        google.maps.event.addDomListener(button, 'click', function () {
            selectColor(color);
            setSelectedShapeColor(color);
        });

        return button;
    }

    function buildColorPalette() {
        var colorPalette = document.getElementById('color-palette');
        for (var i = 0; i < colors.length; ++i) {
            var currColor = colors[i];
            var colorButton = makeColorButton(currColor);
            colorPalette.appendChild(colorButton);
            colorButtons[currColor] = colorButton;
        }
        selectColor(colors[0]);
    }





    function Select1() {
        var isChecked = document.getElementById("s1").checked;
        document.getElementById("selectarea").disabled = !isChecked;
    }
    function Select2() {
        var isChecked = document.getElementById("s2").checked;
        document.getElementById("selectriverarea").disabled = !isChecked;
    }
    function sliderr(n) {
        var dis = $('#ss-' + n).css('display');
        console.log(dis);
        if (dis == 'none') {
            $("#ss-" + n).css("display", "block");
            $("#sd-" + n).css("height", "auto");

        } else {
            $("#ss-" + n).css("display", "none");
            $("#sd-" + n).css("height", "0px");
        }
    }
    function ss_l_menu() {
        if ($(".ss-btn").hasClass("ww-100")) {
            $(".ss-btn").removeClass("ww-100");
            $(".l-menu").animate({ "left": "-400px" }, 300, "swing");
            $(".ss-btn").animate({ "left": "0px" }, 300, "swing");
            $(".ss-btn").html('<i class="fas fa-chevron-right"></i>')
        } else {
            $(".ss-btn").addClass("ww-100");
            $(".l-menu").animate({ "left": "0px" }, 300, "swing");
            $(".ss-btn").animate({ "left": "360px" }, 300, "swing");
            $(".ss-btn").html('<i class="fas fa-chevron-left"></i>')
        }

    }
    function ss_r_menu() {
        if ($(".ss-r-btn").hasClass("ww-100")) {
            $(".ss-r-btn").removeClass("ww-100");
            $(".r-menu").animate({ "right": "-400px" }, 300, "swing");
            $(".ss-r-btn").animate({ "right": "0px" }, 300, "swing");
            $(".ss-r-btn").html('<i class="fas fa-chevron-left"></i>')
        } else {
            $(".ss-r-btn").addClass("ww-100");
            $(".r-menu").animate({ "right": "0px" }, 300, "swing");
            $(".ss-r-btn").animate({ "right": "360px" }, 300, "swing");
            $(".ss-r-btn").html('<i class="fas fa-chevron-right"></i>')
        }

    }
    function hideresulte() {
        $("#Resulte").hide();
        $(".specify").show();
        $("#okbtn").hide();
    }
    /*flow*/
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
    $(document).ready(function () {
        $("#okbtn").hide();
        $("#selecttypes").on('change', function () {
            $('#selectGasSystem').prop('selectedIndex', 0);
            var type = $('#selecttypes').find(":selected").val();
            if (type == "none") {
                $("#okbtn").hide();
                $(".GasSystem").hide();
            }
            else if (type == "ng") {
                $("#okbtn").hide();
                $(".GasSystem").show();
                $("#selectGasSystem").on('change', function () {
                    var gassystem = $('#selectGasSystem').find(":selected").val();
                    if (gassystem == "none") {
                        $("#okbtn").hide();
                    }
                    else if (gassystem == "ground") {
                        $("#okbtn").hide();
                        $(".status").show();
                        $("#selectstatus").on('change', function () {
                            var status = $('#selectstatus').find(":selected").val();
                            if (status == "none") {
                                $("#okbtn").hide();
                            }
                            else if (status == "liquid") {
                                $("#okbtn").show();
                                $("#Btnok").click(function () {
                                    $(".pressure").hide();
                                    EIA();
                                });
                            }
                            else {
                                $("#okbtn").hide();
                                $(".pressure").show();
                                $("#selectpressure").on('change', function () {
                                    var pressure = $('#selectpressure').find(":selected").val();
                                    if (pressure == "none") {
                                        $("#okbtn").hide();
                                    }
                                    else if (pressure == "1") {
                                        $("#okbtn").hide();
                                        $(".size").show();
                                        $("#selectsize").on('change', function () {
                                            var size = $('#selectsize').find(":selected").val();
                                            if (size == "none") {
                                                $("#okbtn").hide();
                                            } else if (size == "1") {/*size <= 16*/
                                                $("#okbtn").hide();
                                                $(".riverarea").show();
                                                $(".area").hide();
                                                $("#Btnriverarea").click(function () {
                                                    var riverarea = $('#selectriverarea').find(":selected").val();
                                                    if (riverarea == "none") {
                                                        $("#okbtn").hide();
                                                    }
                                                    else if (riverarea == "y") {
                                                        EIA();
                                                    } else {
                                                        ER();
                                                    }
                                                });
                                            }
                                            else if (size == "2") {/*size > 16*/
                                                $(".riverarea").hide();
                                                $(".area").show();
                                                $("#Btnarea").click(function () {
                                                    var area = $('#selectarea').find(":selected").val();
                                                    if (area == "none") {
                                                        alert("กรุณาเลือกพื้นที่");
                                                    } else if (area == "in") {
                                                        $(".riverarea").show();
                                                        $("#Btnriverarea").click(function () {
                                                            var riverarea = $('#selectriverarea').find(":selected").val();
                                                            if (riverarea == "none") {
                                                                $("#okbtn").hide();
                                                            } else if (riverarea == "y") {
                                                                EIA();
                                                            } else {
                                                                ER();
                                                            }
                                                        });

                                                    } else {
                                                        $(".riverarea").hide();
                                                        EIA();
                                                    }
                                                });
                                            }
                                        });
                                    }
                                    else {
                                        $("#okbtn").hide();
                                        $(".size").show();
                                        $("#selectsize").on('change', function () {
                                            var size = $('#selectsize').find(":selected").val();
                                            if (size == "none") {
                                                $("#okbtn").hide();
                                                alert("กรุณาเลือกขนาดเส้นผ่านศูนย์กลางของท่อ");
                                            } else if (size == "1" || size == "2") {
                                                $("#okbtn").show();
                                                $("#Btnok").click(function () {
                                                    $(".riverarea").hide();
                                                    $(".area").show();
                                                    $("#Btnarea").click(function () {
                                                        var area = $('#selectarea').find(":selected").val();
                                                        if (area == "none") { alert("กรุณาเลือกพื้นที่"); }
                                                        else if (area == "in") {
                                                            $(".riverarea").show();
                                                            $("#Btnriverarea").click(function () {
                                                                var riverarea = $('#selectriverarea').find(":selected").val();
                                                                if (riverarea == "none") { alert("กรุณาเลือกพื้นที่ชั้นคุณภาพลุ่มน้ำชั้น 1"); }
                                                                else if (riverarea == "y") {
                                                                    EIA();
                                                                } else {
                                                                    ER();
                                                                }
                                                            });
                                                        } else {
                                                            $(".riverarea").hide();
                                                            EIA();
                                                        }
                                                    });
                                                });

                                            } else {
                                                $("#okbtn").hide();
                                            }
                                        });
                                    }
                                });
                            }
                        });
                    }
                    else {
                        $("#okbtn").show();
                        $("#Btnok").click(function () {
                            $(".GasSystem").hide();
                            $(".pressure").hide();
                            $(".size").hide();
                            $(".status").hide();
                            $(".area").hide();
                            $(".riverarea").hide();
                            EIA();
                        });
                    }
                });
            }
            else {
                $("#okbtn").show();
                $(".GasSystem").hide();
                $(".pressure").hide();
                $(".size").hide();
                $(".status").hide();
                $(".area").hide();
                $(".riverarea").hide();
                $("#Btnok").click(function () {
                    EIA();
                });
            }
        });
    });
    function EIA() {
        $("#imLogo").attr("src", "/Image/สผ.png");
        $(".specify").hide();
        $("#Resulte").show();
        document.getElementById('labeltype').innerHTML = "รายงานการประเมินผลกระทบสิ่งแวดล้อม (EIA)";
        document.getElementById('labeloffer').innerHTML = "สำนักงานนโยบายและแผนทรัพยากรธรรมชาติและสิ่งแวดล้อม (สผ.)";
        document.getElementById('labellaw').innerHTML = "ประกาศกระทรวงทรัพยากรธรรมชาติและสิ่งแดล้อม เรื่อง กำหนดโครงการกิจการ หรือดำเนินการ ซึ่งต้องจัดทำรายงาน EIA (ลำดับที่ 27)";
    }
    function ER() {
        $("#imLogo").attr("src", "/Image/กระทรวงพลังงาน (1).png");
        $(".specify").hide();
        $("#Resulte").show();
        document.getElementById('labeltype').innerHTML = "รายงานด้านสิ่งแวดล้อม (ER)";
        document.getElementById('labeloffer').innerHTML = "กรมธุรกิจพลังงาน (ธพ.)";;
        document.getElementById('labellaw').innerHTML = "ประกาศกระทรวงพลังงาน เรื่อง กำหนดประเภท และขนาดของระบบการขนส่งก๊าซธรรมชาติทางท่อและหลักเกณฑ์ วิธีการฯ จัดทำ ER" + "ประกาศกระทรวงทรัพยากรธรรมชาติและสิ่งแวดล้อม เรื่อง กำหนดโครงการ กิจการ หรือการดำเนินการ ซึ่งต้องจัดทำรายงาน EIA (ลำดับที่ 4)";

    }
    function enable_layer(e) {
        var kmlLayer;
        var id = $(e).val();
        if ($(e).is(":checked")) {
            kmlLayer = new google.maps.KmlLayer(kml[id].url, {
                suppressInfoWindows: true,
                preserveViewport: true
            });
            kmlLayer.addListener('click', function (kmlEvent) {
                var text = kmlEvent.featureData.description;

                /*showInContentWindow(text);*/
            });

            function showInContentWindow(text) {
                var sidediv = document.getElementById('divResults');
                sidediv.innerHTML = text;
            }
            kml[id].obj = kmlLayer;
            kml[id].obj.setMap(map);
        } else {
            console.log('close');
            kml[id].obj.setMap(null);
            delete kml[id].obj;
        }
    }
    function removeAll() {
        var Select2 = document.getElementById('list');
        Select2.remove(Select2.selectedIndex);
    }
    function loadGeoJsonString(geoString) {
        var geojson = JSON.parse(geoString);
        map.data.addGeoJson(geojson);
        zoom(map);
    }
    function zoom(map) {
        var bounds = new google.maps.LatLngBounds();
        map.data.forEach(function (feature) {
            processPoints(feature.getGeometry(), bounds.extend, bounds);
        });
        map.fitBounds(bounds);
    }
    function processPoints(geometry, callback, thisArg) {
        if (geometry instanceof google.maps.LatLng) {
            callback.call(thisArg, geometry);
        } else if (geometry instanceof google.maps.Data.Point) {
            callback.call(thisArg, geometry.get());
        } else {
            geometry.getArray().forEach(function (g) {
                processPoints(g, callback, thisArg);
            });
        }
    }
    function handleDrop(e) {
        var files = e.dataTransfer.files;
        if (files.length) {
            // process file(s) being dropped
            // grab the file data from each file
            for (var i = 0, file; file = files[i]; i++) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    loadGeoJsonString(e.target.result);
                };
                reader.onerror = function (e) {
                    console.error('reading failed');
                };
                reader.readAsText(file);
            }
        } else {
            // process non-file (e.g. text or html) content being dropped
            // grab the plain text version of the data
            var plainText = e.dataTransfer.getData('text/plain');
            if (plainText) {
                loadGeoJsonString(plainText);
            }
        }

        // prevent drag event from bubbling further
        return false;
    }
    function thisFileUpload() {
        $("#files").click();
    }

    $(function () {
        var data_duplicate = [];
        var loop_mng = [];
        // let json = require('Indrustry1.geojson');
        //
        var loop_mng = [];
        var data = [];

        //let json = require('นิคมอุตสาหกรรม1.json');
        $.getJSON('https://raw.githubusercontent.com/Naphatsanan1280/Kmlfile/master/Indrustry.geojson', function (data) {
            var array_set = [];
            for (var i = 0; i < data.features.length; i++) {
                var data_sort = data.features[i].geometry.coordinates[0][0];
                //console.log(data.features[0].geometry.coordinates[0][0]);
                var data_set = [];
                for (var j = 0; j < data_sort.length; j++) {
                    data_set.push(data_sort[j][0]);
                    data_set.push(data_sort[j][1]);
                }
                array_set[i] = {
                    id_companyy: data.features[i].properties.Id,
                    name_companny: data.features[i].properties.Name,
                    lat_long: data_set
                };
                //console.log(array_set[i]);
            }

            for (var i = 0; i < array_set.length; i++) {
                for (var j = 0; j < array_set.length; j++) {
                    let inttersection = array_set[i].lat_long.filter(x => array_set[j].lat_long.includes(x));
                    if (inttersection.length > 0 && i != j) {
                        if (!(loop_mng.includes(i))) {
                            loop_mng.push(i);
                            data_duplicate.push({
                                id_company1: array_set[i].id_companyy,
                                name_companny1: array_set[i].name_companny,
                                id_company2: array_set[j].id_companyy,
                                name_companny2: array_set[j].name_companny,
                                lat_long_duplicate1: inttersection
                            });
                        }
                    }
                }
            }
            //console.log(data_duplicate);
        });



        /*  $.getJSON('https://raw.githubusercontent.com/Naphatsanan1280/Kmlfile/master/Environmental_Protected_Area_M1.geojson', function (data) {
              var array_set = [];
              for (var i = 0; i < data.features.length; i++) {
                  var data_sort = data.features[i].geometry.coordinates[0][0];
                  //console.log(data.features[0].geometry.coordinates[0][0]);
                  var data_set = [];
                  for (var j = 0; j < data_sort.length; j++) {
                      data_set.push(data_sort[j][0]);
                      data_set.push(data_sort[j][1]);
                  }
                  array_set[i] = {
                      name_Area: data.features[i].properties.Area_Name,
                      lat_long: data_set
                  };
                  console.log(array_set[i]);
              }

              for (var i = 0; i < array_set.length; i++) {
                  for (var j = 0; j < array_set.length; j++) {
                      let inttersection = array_set[i].lat_long.filter(x => array_set[j].lat_long.includes(x));
                      if (inttersection.length > 0 && i != j) {
                          if (!(loop_mng.includes(i))) {
                              loop_mng.push(i);
                              data_duplicate.push({
                                  id_company1: array_set[i].id_companyy,
                                  name_companny1: array_set[i].name_companny,
                                  id_company2: array_set[j].id_companyy,
                                  name_companny2: array_set[j].name_companny,
                                  lat_long_duplicate1: inttersection
                              });
                          }
                      }
                  }
              }
              //console.log(data_duplicate);
          });

          $.getJSON('https://raw.githubusercontent.com/Naphatsanan1280/Kmlfile/master/Ramsar_site.geojson', function (data) {
              var array_set = [];
              for (var i = 0; i < data.features.length; i++) {
                  var data_sort = data.features[i].geometry.coordinates[0][0];
                  //console.log(data.features[0].geometry.coordinates[0][0]);
                  var data_set = [];
                  for (var j = 0; j < data_sort.length; j++) {
                      data_set.push(data_sort[j][0]);
                      data_set.push(data_sort[j][1]);
                  }
                  array_set[i] = {
                      name_Area: data.features[i].properties.W_Name_1,
                      lat_long: data_set
                  };
                  console.log(array_set[i]);
              }

              for (var i = 0; i < array_set.length; i++) {
                  for (var j = 0; j < array_set.length; j++) {
                      let inttersection = array_set[i].lat_long.filter(x => array_set[j].lat_long.includes(x));
                      if (inttersection.length > 0 && i != j) {
                          if (!(loop_mng.includes(i))) {
                              loop_mng.push(i);
                              data_duplicate.push({
                                  id_company1: array_set[i].id_companyy,
                                  name_companny1: array_set[i].name_companny,
                                  id_company2: array_set[j].id_companyy,
                                  name_companny2: array_set[j].name_companny,
                                  lat_long_duplicate1: inttersection
                              });
                          }
                      }
                  }
              }
              //console.log(data_duplicate);
          });*/

    });
</script>